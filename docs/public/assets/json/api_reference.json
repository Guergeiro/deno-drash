{
  "Drash.Compilers": {
    "DocBlocksToJson": {
      "fully_qualified_name": "Drash.Compilers.DocBlocksToJson",
      "name": "DocBlocksToJson",
      "annotation": "@class DocBlocksToJson",
      "description": [
        "This compiler reads doc blocks and converts them to parsable JSON."
      ],
      "example_code": [],
      "properties": [
        {
          "access_modifier": "protected",
          "description": [
            "A property to hold the final result of the compilation."
          ],
          "example_code": [],
          "signature": "protected parsed: any = {}",
          "annotation": "@property any parsed",
          "data_type": "any",
          "name": "parsed"
        },
        {
          "access_modifier": "protected",
          "description": [
            "A property to hold the name of the current file being parsed. This property\nonly exists for debugging purposes. This class has logging to make it\neasier for Drash developers and users to find errors during compilation."
          ],
          "example_code": [],
          "signature": "protected current_file: string = \"\"",
          "annotation": "@property string current_file",
          "data_type": "string",
          "name": "current_file"
        }
      ],
      "methods": [
        {
          "access_modifier": "public",
          "description": [
            "Compile a JSON array containing classes, properties, and methods from the\nspecified files by parsing the doc blocks of each file."
          ],
          "example_code": [
            {
              "title": "Example Call",
              "filepath": "/api-reference/compilers/doc_blocks_to_json_m_compile_example_call.ts",
              "language": "typescript",
              "code": "import Drash from \"https://deno.land/x/drash/mod.ts\";\n\nconst compiler = new Drash.Compilers.DocBlocksToJson();\nconst result = compiler.compile([\"file.ts\"]); // See file.ts example code below\n\nconst encoder = new TextEncoder();\nconst data = encoder.encode(JSON.stringify(result, null, 2));\nDeno.writeFileSync(\"output.json\", data); // See output.json example code below\n"
            },
            {
              "title": "file.ts",
              "filepath": "/api-reference/compilers/doc_blocks_to_json_m_compile_example_input.ts",
              "language": "typescript",
              "code": "// namespace Drash.Services\n\n/**\n * @class ClassOne\n * Class one does class one things.\n */\nexport default class ClassOne {\n  /**\n   * Class one property one.\n   *\n   * This is a second paragraph.\n   *\n   * This is a third paragraph.\n   * There is also a sentence below this third paragraph.\n   *\n   * This is a fourth paragraph.\n   *\n   * @property string property_one\n   *\n   * @examplecode [\n   *   {\n   *     \"title\": \"app.ts\",\n   *     \"filepath\": \"/class_one_p_property_one.ts\",\n   *     \"language\": \"typescript\",\n   *     \"line_highlight\": \"8,10\"\n   *   },\n   *   {\n   *     \"title\": \"app.ts\",\n   *     \"filepath\": \"/class_one_p_property_two.ts\",\n   *     \"language\": \"typescript\",\n   *     \"line_highlight\": \"11\"\n   *   }\n   * ]\n   */\n  public property_one: string = \"\";\n\n  /**\n   * Class one method one.\n   *\n   * This is a second paragraph.\n   *\n   * This is a third paragraph.\n   * There is also a sentence below this third paragraph.\n   *\n   * This is a fourth paragraph.\n   *\n   * @param any myObject\n   *     My object.\n   * @param string myString\n   *     Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam finibus\n   *     malesuada leo, vitae vehicula tellus. Aliquam a est in nisi placerat\n   *     placerat quis vitae lectus. Class aptent taciti sociosqu ad litora\n   *     torquent per conubia nostra, per inceptos himenaeos. Aenean vulputate\n   *     sed leo eu faucibus. Suspendisse mauris diam, congue finibus finibus\n   *     eu, bibendum sit amet justo. Fusce eu enim mollis, viverra tortor ut,\n   *     sagittis velit. Cras lobortis augue sed eleifend blandit. Aenean\n   *     scelerisque viverra facilisis. Morbi sit amet pulvinar diam. Sed id\n   *     tortor et sem semper imperdiet in ut libero.\n   *\n   *     This is a second paragraph.\n   *\n   *     This is a third paragraph.\n   *\n   * @return any|undefined\n   *     Returns any when something cool happens.\n   *\n   *     Returns undefined when uhhhhhhhhhh k.\n   *\n   * @return string\n   *     Returns a string when the other two don't get got returRrRrRrned.\n   *\n   * @throws SomeException\n   *     Thrown when something happens.\n   *\n   *     Thrown when something else happens too.\n   * @throws SomeOtherException\n   *     Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam finibus\n   *     malesuada leo, vitae vehicula tellus. Aliquam a est in nisi placerat\n   *     placerat quis vitae lectus. Class aptent taciti sociosqu ad litora\n   *     torquent per conubia nostra, per inceptos himenaeos. Aenean vulputate\n   *     sed leo eu faucibus. Suspendisse mauris diam, congue finibus finibus\n   *     eu, bibendum sit amet justo. Fusce eu enim mollis, viverra tortor ut,\n   *     sagittis velit. Cras lobortis augue sed eleifend blandit. Aenean\n   *     scelerisque viverra facilisis. Morbi sit amet pulvinar diam. Sed id\n   *     tortor et sem semper imperdiet in ut libero.\n   *\n   *     This is a second paragraph.\n   */\n  public classOneMethodOne(myObject: any, myString: string) {}\n}\n"
            },
            {
              "title": "output.json",
              "filepath": "/api-reference/compilers/doc_blocks_to_json_m_compile_example_output.json",
              "language": "json",
              "code": "{\n  \"Drash.Services\": {\n    \"ClassOne\": {\n      \"properties\": [\n        {\n          \"access_modifier\": \"public\",\n          \"annotation\": \"@property string property_one\",\n          \"data_type\": \"string\",\n          \"description\": [\n            \"Class one property one.\",\n            \"This is a second paragraph.\",\n            \"This is a third paragraph. There is also a sentence below this third paragraph.\",\n            \"This is a fourth paragraph.\"\n          ],\n          \"example_code\": [\n            {\n              \"title\": \"app.ts\",\n              \"filepath\": \"/class_one_p_property_one.ts\",\n              \"language\": \"typescript\",\n              \"line_highlight\": \"8,10\",\n              \"code\": \"import Drash from \\\"https://deno.land/x/drash/mod.ts\\\";\\n\\n// This is just an example file for testing... nothing else to see here.\\n\"\n            },\n            {\n              \"title\": \"app.ts\",\n              \"filepath\": \"/class_one_p_property_two.ts\",\n              \"language\": \"typescript\",\n              \"line_highlight\": \"11\",\n              \"code\": \"// comment\\n\"\n            }\n          ],\n          \"name\": \"property_one\",\n          \"signature\": \"public property_one: string = \\\"\\\"\"\n        }\n      ],\n      \"methods\": [\n        {\n          \"access_modifier\": \"public\",\n          \"description\": [\n            \"Class one method one.\",\n            \"This is a second paragraph.\",\n            \"This is a third paragraph. There is also a sentence below this third paragraph.\",\n            \"This is a fourth paragraph.\"\n          ],\n          \"example_code\": [],\n          \"name\": \"classOneMethodOne\",\n          \"params\": [\n            {\n              \"annotation\": \"@param any myObject\",\n              \"data_type\": \"any\",\n              \"description\": [\n                \"My object.\"\n              ],\n              \"name\": \"myObject\"\n            },\n            {\n              \"annotation\": \"@param string myString\",\n              \"data_type\": \"string\",\n              \"description\": [\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam finibus malesuada leo, vitae vehicula tellus. Aliquam a est in nisi placerat placerat quis vitae lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aenean vulputate sed leo eu faucibus. Suspendisse mauris diam, congue finibus finibus eu, bibendum sit amet justo. Fusce eu enim mollis, viverra tortor ut, sagittis velit. Cras lobortis augue sed eleifend blandit. Aenean scelerisque viverra facilisis. Morbi sit amet pulvinar diam. Sed id tortor et sem semper imperdiet in ut libero.\",\n                \"This is a second paragraph.\",\n                \"This is a third paragraph.\"\n              ],\n              \"name\": \"myString\"\n            }\n          ],\n          \"returns\": [\n            {\n              \"annotation\": \"@return any|undefined\",\n              \"data_type\": \"any|undefined\",\n              \"description\": [\n                \"Returns any when something cool happens.\",\n                \"Returns undefined when uhhhhhhhhhh k.\"\n              ],\n              \"name\": null\n            },\n            {\n              \"annotation\": \"@return string\",\n              \"data_type\": \"string\",\n              \"description\": [\n                \"Returns a string when the other two don't get got returRrRrRrned.\"\n              ],\n              \"name\": null\n            }\n          ],\n          \"signature\": \"public classOneMethodOne(myObject: any, myString: string)\",\n          \"throws\": [\n            {\n              \"annotation\": \"@throws SomeException\",\n              \"data_type\": \"SomeException\",\n              \"description\": [\n                \"Thrown when something happens.\",\n                \"Thrown when something else happens too.\"\n              ],\n              \"name\": null\n            },\n            {\n              \"annotation\": \"@throws SomeOtherException\",\n              \"data_type\": \"SomeOtherException\",\n              \"description\": [\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam finibus malesuada leo, vitae vehicula tellus. Aliquam a est in nisi placerat placerat quis vitae lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aenean vulputate sed leo eu faucibus. Suspendisse mauris diam, congue finibus finibus eu, bibendum sit amet justo. Fusce eu enim mollis, viverra tortor ut, sagittis velit. Cras lobortis augue sed eleifend blandit. Aenean scelerisque viverra facilisis. Morbi sit amet pulvinar diam. Sed id tortor et sem semper imperdiet in ut libero.\",\n                \"This is a second paragraph.\"\n              ],\n              \"name\": null\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n"
            }
          ],
          "signature": "public compile(files: string[]): any",
          "name": "compile",
          "params": [
            {
              "annotation": "@param string[] files",
              "data_type": "string[]",
              "description": [
                "The array of files containing doc blocks to parse."
              ],
              "name": "files"
            }
          ],
          "returns": [
            {
              "annotation": "@return any",
              "data_type": "any",
              "description": [
                "Returns the JSON array."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Get the specified `@annotationname` definitions from the specified doc\nblock."
          ],
          "example_code": [
            {
              "title": "Example Call",
              "filepath": "/api-reference/compilers/doc_blocks_to_json_m_getDocBlockAnnotationBlocks_example_call.ts",
              "language": "typescript",
              "code": "import Drash from \"https://deno.land/x/drash/mod.ts\";\n\nconst decoder = new TextDecoder();\nconst fileContentsRaw = Deno.readFileSync(\"doc_block.txt\");  // See doc_block.txt example code below\nconst docBlock = decoder.decode(fileContentsRaw);\n\nconst compiler = new Drash.Compilers.DocBlocksToJson();\nconst results = {\n  params: compiler.getDocBlockAnnotationBlocks(\"@param\", docBlock);\n  returns: compiler.getDocBlockAnnotationBlocks(\"@returns\", docBlock);\n  throws: compiler.getDocBlockAnnotationBlocks(\"@throws\", docBlock);\n};\n\nconst encoder = new TextEncoder();\nconst data = encoder.encode(JSON.stringify(results, null, 2));\nDeno.writeFileSync(\"output.json\", data); // See output.json example code below\n"
            },
            {
              "title": "doc_block.txt",
              "filepath": "/api-reference/compilers/doc_blocks_to_json_m_getDocBlockAnnotationBlocks_doc_block.txt",
              "language": "text",
              "code": "/**\n * Class one method one.\n *\n * This is a second paragraph.\n *\n * This is a third paragraph.\n * There is also a sentence below this third paragraph.\n *\n * This is a fourth paragraph.\n *\n * @param any myObject\n *     My object.\n * @param string myString\n *     Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam finibus\n *     malesuada leo, vitae vehicula tellus. Aliquam a est in nisi placerat\n *     placerat quis vitae lectus. Class aptent taciti sociosqu ad litora\n *     torquent per conubia nostra, per inceptos himenaeos. Aenean vulputate\n *     sed leo eu faucibus. Suspendisse mauris diam, congue finibus finibus\n *     eu, bibendum sit amet justo. Fusce eu enim mollis, viverra tortor ut,\n *     sagittis velit. Cras lobortis augue sed eleifend blandit. Aenean\n *     scelerisque viverra facilisis. Morbi sit amet pulvinar diam. Sed id\n *     tortor et sem semper imperdiet in ut libero.\n *\n *     This is a second paragraph.\n *\n *     This is a third paragraph.\n *\n * @return any|undefined\n *     Returns any when something cool happens.\n *\n *     Returns undefined when uhhhhhhhhhh k.\n *\n * @return string\n *     Returns a string when the other two don't get got returRrRrRrned.\n *\n * @throws SomeException\n *     Thrown when something happens.\n *\n *     Thrown when something else happens too.\n * @throws SomeOtherException\n *     Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam finibus\n *     malesuada leo, vitae vehicula tellus. Aliquam a est in nisi placerat\n *     placerat quis vitae lectus. Class aptent taciti sociosqu ad litora\n *     torquent per conubia nostra, per inceptos himenaeos. Aenean vulputate\n *     sed leo eu faucibus. Suspendisse mauris diam, congue finibus finibus\n *     eu, bibendum sit amet justo. Fusce eu enim mollis, viverra tortor ut,\n *     sagittis velit. Cras lobortis augue sed eleifend blandit. Aenean\n *     scelerisque viverra facilisis. Morbi sit amet pulvinar diam. Sed id\n *     tortor et sem semper imperdiet in ut libero.\n *\n *     This is a second paragraph.\n */\n"
            },
            {
              "title": "output.json",
              "filepath": "/api-reference/compilers/doc_blocks_to_json_m_getDocBlockAnnotationBlocks_output.json",
              "language": "json",
              "code": "{\n  \"params\": [\n    {\n      \"annotation\": \"@param any myObject\",\n      \"data_type\": \"any\",\n      \"description\": [\n        \"My object.\"\n      ],\n      \"name\": \"myObject\"\n    },\n    {\n      \"annotation\": \"@param string myString\",\n      \"data_type\": \"string\",\n      \"description\": [\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam finibus malesuada leo, vitae vehicula tellus. Aliquam a est in nisi placerat placerat quis vitae lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aenean vulputate sed leo eu faucibus. Suspendisse mauris diam, congue finibus finibus eu, bibendum sit amet justo. Fusce eu enim mollis, viverra tortor ut, sagittis velit. Cras lobortis augue sed eleifend blandit. Aenean scelerisque viverra facilisis. Morbi sit amet pulvinar diam. Sed id tortor et sem semper imperdiet in ut libero.\",\n        \"This is a second paragraph.\",\n        \"This is a third paragraph.\"\n      ],\n      \"name\": \"myString\"\n    }\n  ],\n  \"returns\": [\n    {\n      \"annotation\": \"@return any|undefined\",\n      \"data_type\": \"any|undefined\",\n      \"description\": [\n        \"Returns any when something cool happens.\",\n        \"Returns undefined when uhhhhhhhhhh k.\"\n      ],\n      \"name\": null\n    },\n    {\n      \"annotation\": \"@return string\",\n      \"data_type\": \"string\",\n      \"description\": [\n        \"Returns a string when the other two don't get got returRrRrRrned.\"\n      ],\n      \"name\": null\n    }\n  ],\n  \"throws\": [\n    {\n      \"annotation\": \"@throws SomeException\",\n      \"data_type\": \"SomeException\",\n      \"description\": [\n        \"Thrown when something happens.\",\n        \"Thrown when something else happens too.\"\n      ],\n      \"name\": null\n    },\n    {\n      \"annotation\": \"@throws SomeOtherException\",\n      \"data_type\": \"SomeOtherException\",\n      \"description\": [\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam finibus malesuada leo, vitae vehicula tellus. Aliquam a est in nisi placerat placerat quis vitae lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aenean vulputate sed leo eu faucibus. Suspendisse mauris diam, congue finibus finibus eu, bibendum sit amet justo. Fusce eu enim mollis, viverra tortor ut, sagittis velit. Cras lobortis augue sed eleifend blandit. Aenean scelerisque viverra facilisis. Morbi sit amet pulvinar diam. Sed id tortor et sem semper imperdiet in ut libero.\",\n        \"This is a second paragraph.\"\n      ],\n      \"name\": null\n    }\n  ]\n}\n"
            }
          ],
          "signature": "public getDocBlockAnnotationBlocks(annotation: string, docBlock: string): any[]",
          "name": "getDocBlockAnnotationBlocks",
          "params": [
            {
              "annotation": "@param string annotation",
              "data_type": "string",
              "description": [
                "The annotation to get in the following format: `@annotationname`."
              ],
              "name": "annotation"
            },
            {
              "annotation": "@param string docBlock",
              "data_type": "string",
              "description": [
                "The docBlock to get the `@annotationname` definitions from."
              ],
              "name": "docBlock"
            }
          ],
          "returns": [
            {
              "annotation": "@return any[]",
              "data_type": "any[]",
              "description": [
                "Returns an array of data related to the specified annotation."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Parse the specified array of method doc blocks and return an array of\nmethod-related data."
          ],
          "example_code": [],
          "signature": "protected getClassMethods(docBlocks: string[]): any[]",
          "name": "getClassMethods",
          "params": [
            {
              "annotation": "@param string[] docBlocks",
              "data_type": "string[]",
              "description": [
                "The array of doc blocks to parse."
              ],
              "name": "docBlocks"
            }
          ],
          "returns": [
            {
              "annotation": "@return any[]",
              "data_type": "any[]",
              "description": [
                "Returns an array of method-related data."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Parse the specified class doc block."
          ],
          "example_code": [],
          "signature": "protected getClassDocBlock(docBlock: string): any",
          "name": "getClassDocBlock",
          "params": [
            {
              "annotation": "@param string[] docBlocks",
              "data_type": "string[]",
              "description": [
                "The array of doc blocks to parse."
              ],
              "name": "docBlocks"
            }
          ],
          "returns": [
            {
              "annotation": "@return any[]",
              "data_type": "any[]",
              "description": [
                "Returns an array of property-related data."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Parse the specified array of property doc blocks and return an array of\nproperty-related data."
          ],
          "example_code": [],
          "signature": "protected getClassProperties(docBlocks: string[]): any[]",
          "name": "getClassProperties",
          "params": [
            {
              "annotation": "@param string[] docBlocks",
              "data_type": "string[]",
              "description": [
                "The array of doc blocks to parse."
              ],
              "name": "docBlocks"
            }
          ],
          "returns": [
            {
              "annotation": "@return any[]",
              "data_type": "any[]",
              "description": [
                "Returns an array of property-related data."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Get the common doc block data between a class' property doc blocks and\nmethod doc blocks."
          ],
          "example_code": [],
          "signature": "protected getClassCommonData(docBlock: string): any",
          "name": "getClassCommonData",
          "params": [
            {
              "annotation": "@param string docBlock",
              "data_type": "string",
              "description": [
                "The doc block in question."
              ],
              "name": "docBlock"
            }
          ],
          "returns": [
            {
              "annotation": "@return any",
              "data_type": "any",
              "description": [
                "Returns an access modifier, description, example code, and signature."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Get the `@annotationname` line."
          ],
          "example_code": [],
          "signature": "protected getDocBlockAnnotationLine(annotation: string, docBlock: string): any",
          "name": "getDocBlockAnnotationLine",
          "params": [
            {
              "annotation": "@param string annotation",
              "data_type": "string",
              "description": [
                "The annotation to get from the doc block."
              ],
              "name": "annotation"
            },
            {
              "annotation": "@param string docBlock",
              "data_type": "string",
              "description": [
                "The doc block to get the `@annotationname` definitions from."
              ],
              "name": "docBlock"
            }
          ],
          "returns": [
            {
              "annotation": "@return any",
              "data_type": "any",
              "description": [
                "Returns an object containing the annotation lines data."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Get the description of the specified doc block."
          ],
          "example_code": [],
          "signature": "protected getDocBlockDescription(docBlock: string): string[]",
          "name": "getDocBlockDescription",
          "params": [
            {
              "annotation": "@param string docblock",
              "data_type": "string",
              "description": [
                "The doc block in question."
              ],
              "name": "docblock"
            }
          ],
          "returns": [
            {
              "annotation": "@return string[]",
              "data_type": "string[]",
              "description": [
                "Returns an array of descriptions."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Get the example code of the specified doc block."
          ],
          "example_code": [],
          "signature": "protected getDocBlockExampleCode(docBlock: string): any[]",
          "name": "getDocBlockExampleCode",
          "params": [
            {
              "annotation": "@param string docblock",
              "data_type": "string",
              "description": [
                "The doc block in question."
              ],
              "name": "docblock"
            }
          ],
          "returns": [
            {
              "annotation": "@return any[]",
              "data_type": "any[]",
              "description": [
                "Returns an array of the example code."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Get paragraphs from a text block."
          ],
          "example_code": [],
          "signature": "protected getParagraphs(textBlock: string): string[]",
          "name": "getParagraphs",
          "params": [
            {
              "annotation": "@param string textBlock",
              "data_type": "string",
              "description": [
                "The text block containing the paragraph(s)."
              ],
              "name": "textBlock"
            }
          ],
          "returns": [
            {
              "annotation": "@return string[]",
              "data_type": "string[]",
              "description": [
                "Returns an array of strings. Each element in the array is a separate\nparagraph."
              ],
              "name": null
            }
          ],
          "throws": []
        }
      ]
    }
  },
  "Drash.Exceptions": {
    "HttpException": {
      "fully_qualified_name": "Drash.Exceptions.HttpException",
      "name": "HttpException",
      "annotation": "@class HttpException",
      "description": [
        "This class helps you throw HTTP errors in a semantic way."
      ],
      "example_code": [],
      "properties": [],
      "methods": [
        {
          "access_modifier": "public",
          "description": [
            "Construct an object of this class."
          ],
          "example_code": [],
          "signature": "constructor(code: number, message?: string)",
          "name": "number,",
          "params": [
            {
              "annotation": "@param number code",
              "data_type": "number",
              "description": [
                "The code to associate this error with. This should be a valid HTTP\nstatus code."
              ],
              "name": "code"
            },
            {
              "annotation": "@param string message",
              "data_type": "string",
              "description": [
                "The error message."
              ],
              "name": "message"
            }
          ],
          "returns": [],
          "throws": []
        }
      ]
    }
  },
  "Drash.Http": {
    "Request": {
      "fully_qualified_name": "Drash.Http.Request",
      "name": "Request",
      "annotation": "@class Request",
      "description": [
        "This is a wrapper class for ServerRequest. It just adds more properties to\nthe request object--allowing Drash to work with a more flexible request\nobject."
      ],
      "example_code": [],
      "properties": [],
      "methods": [
        {
          "access_modifier": "public",
          "description": [
            "Construct an object of this class."
          ],
          "example_code": [],
          "signature": "constructor(request: ServerRequest)",
          "name": "ServerRequest)",
          "params": [
            {
              "annotation": "@param ServerRequest request",
              "data_type": "ServerRequest",
              "description": [],
              "name": "request"
            }
          ],
          "returns": [],
          "throws": []
        }
      ]
    },
    "Resource": {
      "fully_qualified_name": "Drash.Http.Resource",
      "name": "Resource",
      "annotation": "@class Resource",
      "description": [
        "This is the base resource class for all resources. All resource classes must\nbe derived from this class."
      ],
      "example_code": [],
      "properties": [],
      "methods": [
        {
          "access_modifier": "public",
          "description": [
            "Construct an object of this class."
          ],
          "example_code": [],
          "signature": "constructor(request: ServerRequest, response: DrashHttpResponse, server: DrashHttpServer)",
          "name": "ServerRequest,",
          "params": [
            {
              "annotation": "@param ServerRequest request",
              "data_type": "ServerRequest",
              "description": [],
              "name": "request"
            }
          ],
          "returns": [],
          "throws": []
        }
      ]
    },
    "Response": {
      "fully_qualified_name": "Drash.Http.Response",
      "name": "Response",
      "annotation": "@class Response",
      "description": [
        "Response handles sending a response to the client making the request."
      ],
      "example_code": [],
      "properties": [
        {
          "access_modifier": "public",
          "description": [
            "The body of this response."
          ],
          "example_code": [
            {
              "title": "app.ts",
              "filepath": "/api-reference/http/response/p_body.ts",
              "language": "typescript",
              "line_highlight": "6",
              "code": "import Drash from \" https://deno.land/x/drash/mod.ts\";\n\nclass HomeResource extends Drash.Http.Resource {\n  static paths = [\"/\"];\n  public GET() {\n    this.response.body = \"Ok... you got me.\";\n    return this.response;\n  }\n}\n\nlet server = new Drash.Http.Server({\n  address: \"localhost:8000\",\n  response_output: \"application/json\",\n  resources: [HomeResource],\n  logger: new Drash.Loggers.ConsoleLogger({\n    enabled: true,\n    level: \"debug\"\n  })\n});\n\nserver.run();\n"
            }
          ],
          "signature": "public body: any = {}",
          "annotation": "@property any body",
          "data_type": "any",
          "name": "body"
        },
        {
          "access_modifier": "public",
          "description": [
            "The body of this response as a string."
          ],
          "example_code": [],
          "signature": "public body_generated: string = \"\"",
          "annotation": "@property string body_generated",
          "data_type": "string",
          "name": "body_generated"
        },
        {
          "access_modifier": "public",
          "description": [
            "This response's headers."
          ],
          "example_code": [],
          "signature": "public headers: Headers",
          "annotation": "@property Headers headers",
          "data_type": "Headers",
          "name": "headers"
        },
        {
          "access_modifier": "public",
          "description": [
            "The request object."
          ],
          "example_code": [],
          "signature": "public request: DrashHttpRequest",
          "annotation": "@property Drash.Http.Request request",
          "data_type": "Drash.Http.Request",
          "name": "request"
        },
        {
          "access_modifier": "public",
          "description": [
            "This response's status code (e.g., 200 for OK). _Drash.Http.Response_\nobjects use _Status_ and _STATUS_TEXT_ from [https://deno.land/x/http/http_status.ts](https://deno.land/x/http/http_status.ts)."
          ],
          "example_code": [],
          "signature": "public status_code: number = Status.OK",
          "annotation": "@property number status_code",
          "data_type": "number",
          "name": "status_code"
        }
      ],
      "methods": [
        {
          "access_modifier": "public",
          "description": [
            "Construct an object of this class."
          ],
          "example_code": [],
          "signature": "constructor(request: DrashHttpRequest)",
          "name": "DrashHttpRequest)",
          "params": [
            {
              "annotation": "@param Drash.Http.Request request",
              "data_type": "Drash.Http.Request",
              "description": [],
              "name": "request"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Generate a response."
          ],
          "example_code": [],
          "signature": "public generateResponse(): string",
          "name": "generateResponse",
          "params": [],
          "returns": [
            {
              "annotation": "@return string",
              "data_type": "string",
              "description": [],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Get the status message based on the status code."
          ],
          "example_code": [
            {
              "title": "app.ts",
              "filepath": "/api-reference/http/response/m_getStatusMessage.ts",
              "language": "typescript",
              "line_highlight": "8",
              "code": "import Drash from \" https://deno.land/x/drash/mod.ts\";\nimport { Status } from \"https://deno.land/x/http/http_status.ts\";\n\nclass HomeResource extends Drash.Http.Resource {\n  static paths = [\"/\"];\n  public PUT() {\n    this.response.status_code = Status.NoContent;\n    console.log(this.response.getStatusMessage()); // Outputs => \"No Content\"\n    return this.response;\n  }\n}\n\nlet server = new Drash.Http.Server({\n  address: \"localhost:8000\",\n  response_output: \"application/json\",\n  resources: [HomeResource],\n  logger: new Drash.Loggers.ConsoleLogger({\n    enabled: true,\n    level: \"debug\"\n  })\n});\n\nserver.run();\n"
            }
          ],
          "signature": "public getStatusMessage(): string",
          "name": "getStatusMessage",
          "params": [],
          "returns": [
            {
              "annotation": "@return string",
              "data_type": "string",
              "description": [
                "Returns the status message associated with `this.status_code`. For\nexample, if the response's `status_code` is `200`, then this method\nwill return \"OK\" as the status message."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Get the full status message based on the status code. This is just the\nstatus code and the status message together (e.g., `200 (OK)`, `401\n(Unauthorized)`, etc.)."
          ],
          "example_code": [],
          "signature": "public getStatusMessageFull(): string",
          "name": "getStatusMessageFull",
          "params": [],
          "returns": [
            {
              "annotation": "@return string",
              "data_type": "string",
              "description": [],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Send the response to the client making the request."
          ],
          "example_code": [],
          "signature": "public send(): any",
          "name": "send",
          "params": [],
          "returns": [
            {
              "annotation": "@return any",
              "data_type": "any",
              "description": [
                "Returns the output which is passed to `Drash.Http.Request.respond()`.\nThe output is only returned for unit testing purposes. It is not\nintended to be used elsewhere as this call is the last call in the\nrequest-resource-response lifecycle."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Send the response of a \"static asset\" to the client making the request."
          ],
          "example_code": [],
          "signature": "public sendStatic(): any",
          "name": "sendStatic",
          "params": [],
          "returns": [
            {
              "annotation": "@return any",
              "data_type": "any",
              "description": [],
              "name": null
            }
          ],
          "throws": []
        }
      ]
    },
    "Server": {
      "fully_qualified_name": "Drash.Http.Server",
      "name": "Server",
      "annotation": "@class Server",
      "description": [
        "Server handles the entire request-resource-response lifecycle. It is in\ncharge of handling HTTP requests to resources, static paths, sending\nappropriate responses, and handling any errors that bubble up within the\nrequest-resource-response lifecycle."
      ],
      "example_code": [],
      "properties": [
        {
          "access_modifier": "protected",
          "description": [
            "This server's list of static paths. HTTP requests to a static path are\nusually intended to retrieve some type of concrete resource (e.g., a CSS\nfile or a JS file). If an HTTP request is matched to a static path and the\nresource the HTTP request is trying to get is found, then\n`Drash.Http.Response` will use its `sendStatic()` method to send the static\nasset back to the client."
          ],
          "example_code": [],
          "signature": "protected static_paths: string[] = []",
          "annotation": "@property string[] static_paths",
          "data_type": "string[]",
          "name": "static_paths"
        }
      ],
      "methods": [
        {
          "access_modifier": "public",
          "description": [
            "Construct an object of this class."
          ],
          "example_code": [],
          "signature": "constructor(configs: any)",
          "name": "any)",
          "params": [
            {
              "annotation": "@param any configs",
              "data_type": "any",
              "description": [
                "address: string",
                "logger: Drash.Http.ConsoleLogger|Drash.Http.FileLogger",
                "response_output: string (a proper MIME type)",
                "resources: Drash.Http.Resource[]",
                "static_paths: string[]"
              ],
              "name": "configs"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Handle an HTTP request from the Deno server."
          ],
          "example_code": [],
          "signature": "public handleHttpRequest(request: DrashHttpRequest): any",
          "name": "handleHttpRequest",
          "params": [
            {
              "annotation": "@param Drash.Http.Request request",
              "data_type": "Drash.Http.Request",
              "description": [
                "The request object."
              ],
              "name": "request"
            }
          ],
          "returns": [
            {
              "annotation": "@return any",
              "data_type": "any",
              "description": [
                "See _Drash.Http.Response.send()_."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Handle cases when an error is thrown when handling an HTTP request."
          ],
          "example_code": [],
          "signature": "public handleHttpRequestError(request: DrashHttpRequest, error: any): any",
          "name": "handleHttpRequestError",
          "params": [
            {
              "annotation": "@param Drash.Http.Request request",
              "data_type": "Drash.Http.Request",
              "description": [
                "The request object."
              ],
              "name": "request"
            },
            {
              "annotation": "@param any error",
              "data_type": "any",
              "description": [
                "The error object."
              ],
              "name": "error"
            }
          ],
          "returns": [
            {
              "annotation": "@return any",
              "data_type": "any",
              "description": [
                "See _Drash.Http.Response.send()_."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Handle HTTP requests for the favicon. This method only exists to\nshort-circuit favicon requests--preventing the requests from clogging the\nlogs."
          ],
          "example_code": [],
          "signature": "public handleHttpRequestForFavicon(request: DrashHttpRequest): any",
          "name": "handleHttpRequestForFavicon",
          "params": [
            {
              "annotation": "@param Drash.Http.Request request",
              "data_type": "Drash.Http.Request",
              "description": [],
              "name": "request"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Run the Deno server at the address specified in the configs. This method\ntakes each HTTP request and creates a new and more workable request object\nand passes it to _Drash.Http.Server.handleHttpRequest()_."
          ],
          "example_code": [],
          "signature": "public async run(): Promise<void>",
          "name": "async",
          "params": [],
          "returns": [
            {
              "annotation": "@return Promise<void>",
              "data_type": "Promise<void>",
              "description": [
                "This method just listens for requests at the address you provide in the\nconfigs."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Add an HTTP resource to the server which can be retrieved at specific URIs.",
            "Drash defines an HTTP resource according to the [MDN web\ndocs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web)."
          ],
          "example_code": [],
          "signature": "protected addHttpResource(resourceClass: DrashHttpResource): void",
          "name": "addHttpResource",
          "params": [
            {
              "annotation": "@param Drash.Http.Resource resourceClass",
              "data_type": "Drash.Http.Resource",
              "description": [
                "A child object of the `Drash.Http.Resource` class."
              ],
              "name": "resourceClass"
            }
          ],
          "returns": [
            {
              "annotation": "@return void",
              "data_type": "void",
              "description": [
                "This method just adds `resourceClass` to `this.resources` so it can be\nused (if matched) during an HTTP request."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Add a static path for serving static assets like CSS files, JS files, PDF\nfiles, etc."
          ],
          "example_code": [],
          "signature": "protected addStaticPath(path: string): void",
          "name": "addStaticPath",
          "params": [
            {
              "annotation": "@param string path",
              "data_type": "string",
              "description": [],
              "name": "path"
            }
          ],
          "returns": [
            {
              "annotation": "@return void",
              "data_type": "void",
              "description": [
                "This method just adds `path` to `this.static_paths` so it can be used (if\nmatched) during an HTTP request."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Get the resource class."
          ],
          "example_code": [],
          "signature": "protected getResourceClass(request: DrashHttpRequest): DrashHttpResource|undefined",
          "name": "getResourceClass",
          "params": [
            {
              "annotation": "@param Drash.Http.Request request",
              "data_type": "Drash.Http.Request",
              "description": [
                "The request object."
              ],
              "name": "request"
            }
          ],
          "returns": [
            {
              "annotation": "@return Drash.Http.Resource|undefined",
              "data_type": "Drash.Http.Resource|undefined",
              "description": [
                "Returns a `Drash.Http.Resource` object if the URL path of the request\ncan be matched to a `Drash.Http.Resource` object's paths.",
                "Returns `undefined` if a `Drash.Http.Resource` object can't be matched."
              ],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Is the request for a static path asset?"
          ],
          "example_code": [],
          "signature": "protected requestIsForStaticPathAsset(request: DrashHttpRequest): boolean",
          "name": "requestIsForStaticPathAsset",
          "params": [
            {
              "annotation": "@param Drash.Http.Request request",
              "data_type": "Drash.Http.Request",
              "description": [],
              "name": "request"
            }
          ],
          "returns": [
            {
              "annotation": "@return boolean",
              "data_type": "boolean",
              "description": [
                "Returns true if the request is for an asset in a static path."
              ],
              "name": null
            }
          ],
          "throws": []
        }
      ]
    }
  },
  "Drash.Loggers": {
    "Logger": {
      "fully_qualified_name": "Drash.Loggers.Logger",
      "name": "Logger",
      "annotation": "@class Logger",
      "description": [
        "This logger is the base logger class for all logger classes."
      ],
      "example_code": [],
      "properties": [
        {
          "access_modifier": "protected",
          "description": [
            "This logger's configs."
          ],
          "example_code": [
            {
              "title": "Logger Configs",
              "filepath": "/api-reference/loggers/logger_p_configs.ts",
              "language": "typescript",
              "code": "{\n  //\n  // enabled: boolean\n  //\n  //     OPTIONS/VALUE\n  //         true, false\n  //\n  //     DEFAULT VALUE\n  //         false\n  //\n  //     DESCRIPTION\n  //         Is the logger enabled?\n  //\n  enabled: true,\n\n  //\n  // level: string\n  //\n  //     OPTIONS/VALUE\n  //         all, trace, debug, info, warn, error, fatal, off\n  //\n  //     DEFAULT VALUE\n  //         debug\n  //\n  //     DESCRIPTION\n  //         Control the number of messages logged by the logger.\n  //\n  level: \"debug\",\n\n  //\n  // tag_string: string\n  //\n  //    OPTIONS/VALUE\n  //         This only takes a string with tags formatted as {tag}. Example:\n  //\n  //             {this_tag} | {that_tag} | {another_tag}\n  //             {this_tag} * {that_tag} * {another_tag}\n  //             [{this_tag}] [{that_tag}] [{another_tag}]\n  //\n  //     DEFAULT VALUE\n  //         None.\n  //\n  //     DESCRIPTION\n  //         This tag string will be parsed by the logger object and tags will\n  //         be replaced based on the `tag_string_fns` config.\n  //\n  tag_string: \"\",\n\n  //\n  // tag_string_fns: any\n  //\n  //     OPTIONS/VALUE\n  //         This takes an object of key-value pairs where the key is the name\n  //         of a tag defined in the `tag_string` config.\n  //\n  //     DEFAULT VALUE\n  //         None.\n  //\n  //     DESCRIPTION\n  //         This object is used to replace tags in the `tag_string` config by\n  //         matching keys to tags and replacing tags with the values of the\n  //         keys. For example, if the `tag_string` and `tag_string_fns` configs\n  //         were ...\n  //\n  //             {\n  //               enabled: true,\n  //               level: \"debug\",\n  //               tag_string: \"[ - {datetime} - ] {your_tag} === {level} ===\"\n  //               tag_string_fns: {\n  //                 datetime: function datetime() {\n  //                   let dateTime = new Date();\n  //                   dateTime.setUTCHours(dateTime.getUTCHours() - 5);\n  //                   return dateTime.toISOString().replace(\"T\", \" \");\n  //                 },\n  //                 your_tag: \"This-Is-Your-Tag\"\n  //               }\n  //             }\n  //\n  //         ... then the tags string would output something like ...\n  //\n  //             [ - 2018-08-26 00:10:02.590Z - ] This-Is-Your-Tag === DEBUG === {log message would be appended here}\n  //\n  //         The {level} tag is reserved and cannot be defined. It is replaced\n  //         with the `level` config.\n  //\n  tag_string_fns: {},\n}\n"
            }
          ],
          "signature": "protected configs: any",
          "annotation": null,
          "data_type": null,
          "name": null
        }
      ],
      "methods": [
        {
          "access_modifier": "public",
          "description": [
            "Construct an object of this class."
          ],
          "example_code": [],
          "signature": "constructor(configs: any)",
          "name": "any)",
          "params": [
            {
              "annotation": "@param any configs",
              "data_type": "any",
              "description": [
                "See [Drash.Loggers.Logger.configs](/#/api-reference/loggers/logger#configs)."
              ],
              "name": "configs"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Output a DEBUG level log message."
          ],
          "example_code": [],
          "signature": "public debug(message)",
          "name": "debug",
          "params": [
            {
              "annotation": "@param string message",
              "data_type": "string",
              "description": [
                "The log message."
              ],
              "name": "message"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Output an ERROR level log message."
          ],
          "example_code": [],
          "signature": "public error(message)",
          "name": "error",
          "params": [
            {
              "annotation": "@param string message",
              "data_type": "string",
              "description": [
                "The log message."
              ],
              "name": "message"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Output a FATAL level log message."
          ],
          "example_code": [],
          "signature": "public fatal(message)",
          "name": "fatal",
          "params": [
            {
              "annotation": "@param string message",
              "data_type": "string",
              "description": [
                "The log message."
              ],
              "name": "message"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Output an INFO level log message."
          ],
          "example_code": [],
          "signature": "public info(message)",
          "name": "info",
          "params": [
            {
              "annotation": "@param string message",
              "data_type": "string",
              "description": [
                "The log message."
              ],
              "name": "message"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Output a TRACE level log message."
          ],
          "example_code": [],
          "signature": "public trace(message)",
          "name": "trace",
          "params": [
            {
              "annotation": "@param string message",
              "data_type": "string",
              "description": [
                "The log message."
              ],
              "name": "message"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "Output a WARN level log message."
          ],
          "example_code": [],
          "signature": "public warn(message)",
          "name": "warn",
          "params": [
            {
              "annotation": "@param string message",
              "data_type": "string",
              "description": [
                "The log message."
              ],
              "name": "message"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Get the parsed version of the raw tag string."
          ],
          "example_code": [],
          "signature": "protected getTagStringParsed(): string",
          "name": "getTagStringParsed",
          "params": [],
          "returns": [
            {
              "annotation": "@return string",
              "data_type": "string",
              "description": [],
              "name": null
            }
          ],
          "throws": []
        },
        {
          "access_modifier": "protected",
          "description": [
            "Send the message to the write method (which should be in the child class).\nAlso, do some prechecks before sending to see if the log message should be\nwritten."
          ],
          "example_code": [],
          "signature": "protected sendToWriteMethod(logMethodLevelDefinition, message)",
          "name": "sendToWriteMethod",
          "params": [
            {
              "annotation": "@param any logMethodLevelDefinition",
              "data_type": "any",
              "description": [
                "The dictionary definition of the log message's level."
              ],
              "name": "logMethodLevelDefinition"
            },
            {
              "annotation": "@param string message",
              "data_type": "string",
              "description": [
                "The log message."
              ],
              "name": "message"
            }
          ],
          "returns": [
            {
              "annotation": "@return void",
              "data_type": "void",
              "description": [],
              "name": null
            }
          ],
          "throws": []
        }
      ]
    },
    "ConsoleLogger": {
      "fully_qualified_name": "Drash.Loggers.ConsoleLogger",
      "name": "ConsoleLogger",
      "annotation": "@class ConsoleLogger",
      "description": [
        "This logger allows you to log messages to the console."
      ],
      "example_code": [],
      "properties": [],
      "methods": [
        {
          "access_modifier": "public",
          "description": [
            "Construct an object of this class."
          ],
          "example_code": [],
          "signature": "constructor(configs)",
          "name": null,
          "params": [
            {
              "annotation": "@param any configs",
              "data_type": "any",
              "description": [],
              "name": "configs"
            }
          ],
          "returns": [],
          "throws": []
        },
        {
          "access_modifier": "public",
          "description": [
            "@inheritdoc"
          ],
          "example_code": [],
          "signature": "public write(logMethodLevelDefinition, message): string",
          "name": "write",
          "params": [],
          "returns": [],
          "throws": []
        }
      ]
    },
    "FileLogger": {
      "fully_qualified_name": "Drash.Loggers.FileLogger",
      "name": "FileLogger",
      "annotation": "@class FileLogger",
      "description": [
        "This logger allows you to log messages to a file."
      ],
      "example_code": [],
      "properties": [],
      "methods": []
    }
  }
}